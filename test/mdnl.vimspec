Describe mdnl script functions
  Context .get_markdown_list_prefix()
    It return markdown list prefix
      Assert Equals(g:mdnl.get_markdown_list_prefix('abcdefg'), '')
      Assert Equals(g:mdnl.get_markdown_list_prefix('+ a'), '+')
      Assert Equals(g:mdnl.get_markdown_list_prefix('  * b'), '*')
      Assert Equals(g:mdnl.get_markdown_list_prefix('- dfasfa'), '-')
      Assert Equals(g:mdnl.get_markdown_list_prefix('1. aaa'), '1')
      Assert Equals(g:mdnl.get_markdown_list_prefix('11. aaa'), '11')
      Assert Equals(g:mdnl.get_markdown_list_prefix('1. '), '1')
      Assert Equals(g:mdnl.get_markdown_list_prefix('-abcdf'), '')
      Assert Equals(g:mdnl.get_markdown_list_prefix('123'), '')
      Assert Equals(g:mdnl.get_markdown_list_prefix('+ [x] abcd'), '+ [ ]')
      Assert Equals(g:mdnl.get_markdown_list_prefix('1. [ ] abcd'), '1. [ ]')
    End
  End

  Context .search_paragraph_startline()
    It find paragraph start row
      call setline(1, '+ abc  ')
      call setline(2, '  def  ')
      call setline(3, '  ghi')

      Assert Equals(g:mdnl.search_paragraph_startline(2, 3), 1)
    End
  End

  Context .get_new_listitem()
    It return empty when not list
      call setline(1, 'abc')

      Assert Equals(g:mdnl.get_new_listitem(1, ''), '')
    End
    It return list prefix when no indent list
      call setline(1, '+ abc')

      Assert Equals(g:mdnl.get_new_listitem(1, '+'), '+ ')
    End
    It return increamented prefix when number list
      call setline(1, '1. abc')

      Assert Equals(g:mdnl.get_new_listitem(1, '1'), '2. ')
    End
    It return increamented prefix when number list(check box)
      call setline(1, '1. [ ] abc')

      Assert Equals(g:mdnl.get_new_listitem(1, '1. [ ]'), '2. [ ] ')
    End
    It search list prefix backward
      call setline(1, '* abc')
      call setline(2, '  def')
      call setline(3, '  ghi')

      Assert Equals(g:mdnl.get_new_listitem(3, ''), '* ')
    End
  End

  Context .get_next_indent()
    It don't increase indent when no list line
      call setline(1, '+ abc')
      call setline(2, '  def')

      let indent_str = g:mdnl.get_next_indent(2, '')
      Assert Equals(strlen(indent_str), 2)
    End
    It increase indent when list line
      set shiftwidth=2
      call setline(1, 'abc')
      call setline(2, '+ def')
      call setline(3, '  + ghi')

      let indent_str = g:mdnl.get_next_indent(3, '+')
      Assert Equals(strlen(indent_str), 4)
    End
  End
End

Describe mdnl global functions
  let s:test_data = 'test/testdata.md'

  Context .mdnl#add_new_line()
    It continue paragraph
      execute ':e! ' . s:test_data
      set shiftwidth=2
      call cursor(4, 0)
      call mdnl#add_new_line(1)

      Assert Equals(line('.'), 5)
      Assert Equals(getline(5), '    ') 
    End
    It add new list item line
      execute ':e! ' . s:test_data
      set shiftwidth=2
      call cursor(8, 0)
      call mdnl#add_new_line(2)

      Assert Equals(line('.'), 9)
      Assert Equals(getline(9), '  3. ') 
    End
    It new checkbox(github flavor)
      execute ':e! ' . s:test_data
      set shiftwidth=2
      call cursor(9, 0)
      call mdnl#add_new_line(2)

      Assert Equals(line('.'), 10)
      Assert Equals(getline(10), '+ [ ] ') 
    End
    It new number checkbox(github flavor)
      execute ':e! ' . s:test_data
      set shiftwidth=2
      call cursor(10, 0)
      call mdnl#add_new_line(2)

      Assert Equals(line('.'), 11)
      Assert Equals(getline(11), '2. [ ] ') 
    End
  End
End
